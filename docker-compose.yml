services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-regasis}
      POSTGRES_USER: ${POSTGRES_USER:-regasis}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-regasis}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-regasis} -d ${POSTGRES_DB:-regasis}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-regasis}:${POSTGRES_PASSWORD:-regasis}@db:5432/${POSTGRES_DB:-regasis}
      PORT: ${BACKEND_PORT:-4000}
      NODE_ENV: production
      JWT_SECRET: ${JWT_SECRET:-changeme}
      JWT_EXPIRES: ${JWT_EXPIRES:-15m}
      REFRESH_EXPIRES: ${REFRESH_EXPIRES:-7d}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:${FRONTEND_PORT:-3000}}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-4000}:4000"

  frontend:
    build: ./frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    ports:
      - "${FRONTEND_PORT:-3000}:80"

volumes:
  postgres-data:
